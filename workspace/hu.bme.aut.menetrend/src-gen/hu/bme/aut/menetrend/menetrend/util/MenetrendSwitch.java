/**
 * generated by Xtext 2.10.0
 */
package hu.bme.aut.menetrend.menetrend.util;

import hu.bme.aut.menetrend.menetrend.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see hu.bme.aut.menetrend.menetrend.MenetrendPackage
 * @generated
 */
public class MenetrendSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MenetrendPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MenetrendSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MenetrendPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MenetrendPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.SCHEDULE:
      {
        Schedule schedule = (Schedule)theEObject;
        T result = caseSchedule(schedule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.LINE_NUMBER:
      {
        LineNumber lineNumber = (LineNumber)theEObject;
        T result = caseLineNumber(lineNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.SCHEDULE_PART:
      {
        SchedulePart schedulePart = (SchedulePart)theEObject;
        T result = caseSchedulePart(schedulePart);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.RELATIVE_SCHEDULE:
      {
        RelativeSchedule relativeSchedule = (RelativeSchedule)theEObject;
        T result = caseRelativeSchedule(relativeSchedule);
        if (result == null) result = caseSchedulePart(relativeSchedule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.RELATIVE_TARGET:
      {
        RelativeTarget relativeTarget = (RelativeTarget)theEObject;
        T result = caseRelativeTarget(relativeTarget);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.ABSOLUTE_SCHEDULE:
      {
        AbsoluteSchedule absoluteSchedule = (AbsoluteSchedule)theEObject;
        T result = caseAbsoluteSchedule(absoluteSchedule);
        if (result == null) result = caseSchedulePart(absoluteSchedule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.DEPARTURE:
      {
        Departure departure = (Departure)theEObject;
        T result = caseDeparture(departure);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.SIMPLE_TIME_FORMAT:
      {
        SimpleTimeFormat simpleTimeFormat = (SimpleTimeFormat)theEObject;
        T result = caseSimpleTimeFormat(simpleTimeFormat);
        if (result == null) result = caseDeparture(simpleTimeFormat);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.COMPLEX_TIME_MIDDLE:
      {
        ComplexTimeMiddle complexTimeMiddle = (ComplexTimeMiddle)theEObject;
        T result = caseComplexTimeMiddle(complexTimeMiddle);
        if (result == null) result = caseDeparture(complexTimeMiddle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.COMPLEX_TIME_END:
      {
        ComplexTimeEnd complexTimeEnd = (ComplexTimeEnd)theEObject;
        T result = caseComplexTimeEnd(complexTimeEnd);
        if (result == null) result = caseDeparture(complexTimeEnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MenetrendPackage.STOP:
      {
        Stop stop = (Stop)theEObject;
        T result = caseStop(stop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schedule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schedule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSchedule(Schedule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Line Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Line Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLineNumber(LineNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schedule Part</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schedule Part</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSchedulePart(SchedulePart object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relative Schedule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relative Schedule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelativeSchedule(RelativeSchedule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Relative Target</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Relative Target</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRelativeTarget(RelativeTarget object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Absolute Schedule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Absolute Schedule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbsoluteSchedule(AbsoluteSchedule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Departure</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Departure</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeparture(Departure object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Simple Time Format</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Simple Time Format</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSimpleTimeFormat(SimpleTimeFormat object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Complex Time Middle</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Complex Time Middle</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComplexTimeMiddle(ComplexTimeMiddle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Complex Time End</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Complex Time End</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComplexTimeEnd(ComplexTimeEnd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Stop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Stop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStop(Stop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MenetrendSwitch
