/**
 * generated by Xtext 2.10.0
 */
package hu.bme.aut.menetrend.menetrend.impl;

import hu.bme.aut.menetrend.menetrend.MenetrendPackage;
import hu.bme.aut.menetrend.menetrend.Model;
import hu.bme.aut.menetrend.menetrend.Schedule;
import hu.bme.aut.menetrend.menetrend.Stop;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.aut.menetrend.menetrend.impl.ModelImpl#getStops <em>Stops</em>}</li>
 *   <li>{@link hu.bme.aut.menetrend.menetrend.impl.ModelImpl#getSchedules <em>Schedules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getStops() <em>Stops</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStops()
   * @generated
   * @ordered
   */
  protected EList<Stop> stops;

  /**
   * The cached value of the '{@link #getSchedules() <em>Schedules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchedules()
   * @generated
   * @ordered
   */
  protected EList<Schedule> schedules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MenetrendPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Stop> getStops()
  {
    if (stops == null)
    {
      stops = new EObjectContainmentEList<Stop>(Stop.class, this, MenetrendPackage.MODEL__STOPS);
    }
    return stops;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Schedule> getSchedules()
  {
    if (schedules == null)
    {
      schedules = new EObjectContainmentEList<Schedule>(Schedule.class, this, MenetrendPackage.MODEL__SCHEDULES);
    }
    return schedules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MenetrendPackage.MODEL__STOPS:
        return ((InternalEList<?>)getStops()).basicRemove(otherEnd, msgs);
      case MenetrendPackage.MODEL__SCHEDULES:
        return ((InternalEList<?>)getSchedules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MenetrendPackage.MODEL__STOPS:
        return getStops();
      case MenetrendPackage.MODEL__SCHEDULES:
        return getSchedules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MenetrendPackage.MODEL__STOPS:
        getStops().clear();
        getStops().addAll((Collection<? extends Stop>)newValue);
        return;
      case MenetrendPackage.MODEL__SCHEDULES:
        getSchedules().clear();
        getSchedules().addAll((Collection<? extends Schedule>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MenetrendPackage.MODEL__STOPS:
        getStops().clear();
        return;
      case MenetrendPackage.MODEL__SCHEDULES:
        getSchedules().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MenetrendPackage.MODEL__STOPS:
        return stops != null && !stops.isEmpty();
      case MenetrendPackage.MODEL__SCHEDULES:
        return schedules != null && !schedules.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
